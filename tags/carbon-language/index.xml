<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Carbon Language on Coding in Old Entish</title>
    <link>https://zygoloid.github.io/tags/carbon-language/</link>
    <description>Recent content in Carbon Language on Coding in Old Entish</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Mar 2023 00:24:16 -0700</lastBuildDate><atom:link href="https://zygoloid.github.io/tags/carbon-language/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The little things #1: Access control</title>
      <link>https://zygoloid.github.io/posts/little_things_1_access/</link>
      <pubDate>Sun, 26 Mar 2023 00:24:16 -0700</pubDate>
      
      <guid>https://zygoloid.github.io/posts/little_things_1_access/</guid>
      <description>This post is part of a series looking at little details of programming language design, mostly in the context of Carbon. Check out the series intro post for context and other entries.
Let&amp;rsquo;s talk about public vs. private! Folks who know C++ may be familiar with these concepts, but here is a quick example:
class MyType { public: void MyPublicFunction(); private: void InternalDetail(); }; One of the things that has always been frustrating to me are exactly how public and private work here.</description>
    </item>
    <item>
      <title>The little things in languages</title>
      <link>https://zygoloid.github.io/posts/little_things_series/</link>
      <pubDate>Sun, 26 Mar 2023 00:23:16 -0700</pubDate>
      
      <guid>https://zygoloid.github.io/posts/little_things_series/</guid>
      <description>Working on a programming language is one of the most challenging and open ended design spaces that I have ever tried to operate in, both for existing and brand new languages. There are very few bounds or constraints on the solution space to help guide and direct my thinking. Everything is ambiguous and open ended with endless possibilities. It sounds great to me&amp;hellip; until I need to make progress. Then&amp;hellip; not so much.</description>
    </item>
  </channel>
</rss>
